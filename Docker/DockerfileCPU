FROM ubuntu:18.04

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get -y update \
    && apt-get -y install \
    python3.6 \
    python3-pip \
    python3.6-tk \
    ffmpeg \
    wget \
    curl \
    cmake \
    default-jre \
    git \
    jq \
    libfontconfig1 \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender1 \
    libxi6 libgconf-2-4 -y \
    libmpc-dev \
    libgmp-dev \
    libmpfr-dev \
    unzip \
    xvfb \
    libopenmpi-dev \
    vim \
    zlib1g-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set up the Chrome PPA
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
RUN echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list

# Update the package list and install chrome
RUN apt-get update -y
RUN apt-get install -y google-chrome-stable 

# Set up Chromedriver Environment variables
ENV CHROMEDRIVER_DIR /chromedriver
RUN mkdir -p $CHROMEDRIVER_DIR


# Download and install Chromedriver
RUN wget -q --continue -P $CHROMEDRIVER_DIR "http://chromedriver.storage.googleapis.com/80.0.3987.106/chromedriver_linux64.zip"
RUN unzip $CHROMEDRIVER_DIR/chromedriver* -d $CHROMEDRIVER_DIR
RUN chmod +x $CHROMEDRIVER_DIR/chromedriver

# Put Chromedriver into the PATH
ENV PATH $CHROMEDRIVER_DIR:$PATH

#jupyter notebook password
#cloudywithachanceofamonia
ADD jupyter_notebook_config.json /root/.jupyter/jupyter_notebook_config.json

RUN ln -sfn /usr/bin/pip3 /usr/bin/pip
RUN ln -sfn /usr/bin/python3.6 /usr/bin/python
RUN pip install tensorflow==1.14
RUN pip install torch==1.7.1 --no-cache-dir
ADD requirements.txt /usr/local/requirements.txt
RUN pip install --upgrade -r /usr/local/requirements.txt

ADD run_servers.sh /run_servers.sh
ADD install_components.sh /install_components.sh
ADD plark_robot_tests /plark_robot_tests
# set working directory
WORKDIR /
CMD sh run_servers.sh && tail -f /dev/null

#############################
# Instructions
#############################
# STEPS For Container
# Build the docker image
#       - sudo docker build -t plark_ai .
# Each time a new conda package or pip requirement is needed, this command must be rerun to rebuild the image
# Note that most of the installed packages from before are cached by docker to save time
# To run the docker container:
#       - sudo docker run --runtime=nvidia -v /home/aidanjones/repos/plark_ai/Components:/Components -v /datasets/plark_ai:/data -p 8890:8888 -p 5001:5000 -it --shm-size=8192m plark_ai /bin/bash 
# STEPS FOR JUPYTER
# Inside the container, run jupyter:
#        - jupyter notebook --ip 0.0.0.0 --port 8888 --no-browser --allow-root &
# Note: the port 8888 is the docker containers local port which you mapped to port 8892 on the server
# http://localhost:8890/tree
# jupyter notebook password
# cloudywithachanceofamonia
# sh run_servers.sh &
